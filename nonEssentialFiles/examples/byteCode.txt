Classfile /d:/Dropbox/Projects/Code/modularCompiler/examples/languages.javac.testing.fibonacciWithMain.Fibonacci.class
  Last modified 5-feb-2014; size 645 bytes
  MD5 checksum 894c5f58d277a237338f57eab6f98570
  Compiled from "fibonacci.java"
class Fiboacci
  SourceFile: "fibonacci.java"
  minor version: 0
  major version: 51
  flags: ACC_SUPER

Constant pool:
   #1 = Methodref          #4.#20         //  java/lang/Object."<init>":()V
   #2 = Methodref          #21.#22        //  java/lang/System.console:()Ljava/io/Console;
   #3 = String             #23            //  %s
   #4 = Class              #24            //  java/lang/Object
   #5 = Methodref          #8.#25         //  Fiboacci.fibonacci:(I)I
   #6 = Methodref          #26.#27        //  java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #7 = Methodref          #28.#29        //  java/io/Console.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;
   #8 = Class              #30            //  Fiboacci
   #9 = Utf8               <init>
  #10 = Utf8               ()V
  #11 = Utf8               Code
  #12 = Utf8               LineNumberTable
  #13 = Utf8               main
  #14 = Utf8               ([Ljava/lang/String;)V
  #15 = Utf8               fibonacci
  #16 = Utf8               (I)I
  #17 = Utf8               StackMapTable
  #18 = Utf8               SourceFile
  #19 = Utf8               fibonacci.java
  #20 = NameAndType        #9:#10         //  "<init>":()V
  #21 = Class              #31            //  java/lang/System
  #22 = NameAndType        #32:#33        //  console:()Ljava/io/Console;
  #23 = Utf8               %s
  #24 = Utf8               java/lang/Object
  #25 = NameAndType        #15:#16        //  fibonacci:(I)I
  #26 = Class              #34            //  java/lang/Integer
  #27 = NameAndType        #35:#36        //  valueOf:(I)Ljava/lang/Integer;
  #28 = Class              #37            //  java/io/Console
  #29 = NameAndType        #38:#39        //  printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;
  #30 = Utf8               Fiboacci
  #31 = Utf8               java/lang/System
  #32 = Utf8               console
  #33 = Utf8               ()Ljava/io/Console;
  #34 = Utf8               java/lang/Integer
  #35 = Utf8               valueOf
  #36 = Utf8               (I)Ljava/lang/Integer;
  #37 = Utf8               java/io/Console
  #38 = Utf8               printf
  #39 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;
{
  Fiboacci();
    flags: 

    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return        
      LineNumberTable:
        line 1: 0

  public static void main(java.lang.String[]);
    flags: ACC_PUBLIC, ACC_STATIC

    Code:
      stack=6, locals=1, args_size=1
         0: invokestatic  #2                  // Method java/lang/System.console:()Ljava/io/Console;
         3: ldc           #3                  // String %s
         5: iconst_1      
         6: anewarray     #4                  // class java/lang/Object
         9: dup           
        10: iconst_0      
        11: iconst_5      
        12: invokestatic  #5                  // Method fibonacci:(I)I
        15: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        18: aastore       
        19: invokevirtual #7                  // Method java/io/Console.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;
        22: pop           
        23: return        
      LineNumberTable:
        line 4: 0
        line 5: 23

  public static int fibonacci(int);
    flags: ACC_PUBLIC, ACC_STATIC

    Code:
      stack=3, locals=1, args_size=1
         0: iload_0       
         1: iconst_2      
         2: if_icmpge     9
         5: iconst_1      
         6: goto          22
         9: iload_0       
        10: iconst_1      
        11: isub          
        12: invokestatic  #5                  // Method fibonacci:(I)I
        15: iload_0       
        16: iconst_2      
        17: isub          
        18: invokestatic  #5                  // Method fibonacci:(I)I
        21: iadd          
        22: ireturn       
      LineNumberTable:
        line 8: 0
      StackMapTable: number_of_entries = 2
           frame_type = 9 /* same */
           frame_type = 76 /* same_locals_1_stack_item */
          stack = [ int ]

}
